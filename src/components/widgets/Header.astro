---
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';
import HeaderSubMenu from '~/components/widgets/HeaderSubMenu.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  divder?: boolean;
  links?: MenuLink[];
}

export interface Props {
  id?: string;
  links?: MenuLink[];
  actions?: ActionLink[];
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'dark:bg-darkMode top-0 z-40 mx-auto w-full flex-none border-b border-gray-50/0 bg-primary',
  ]}
>
  <!-- {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}} -->
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative mx-auto w-full px-3 py-3 text-default lg:flex lg:justify-between lg:px-6',
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:ml-auto rtl:mr-0': position === 'right' }, 'flex justify-between']}>
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex items-center lg:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="hidden w-full items-center overflow-y-auto overflow-x-hidden text-default lg:mx-5 lg:flex lg:w-auto lg:overflow-x-auto lg:overflow-y-visible"
      aria-label="Main navigation"
    >
      <ul
        class="flex w-full flex-col align-baseline text-xl font-medium tracking-[0.01rem] lg:w-auto lg:flex-row lg:self-center lg:text-[0.9375rem]"
      >
        {
          links.map(({ text, href, links: subLinks }, i) => (
            <>
              <li class:list={[subLinks?.length ? 'dropdown' : '']}>
                {subLinks?.length ? (
                  <HeaderSubMenu text={text} links={subLinks} currentPath={currentPath} />
                ) : (
                  <a
                    class:list={[
                      'hover:text-link items-centers flex px-4 py-3 text-white',
                      { 'aw-link-active': href === currentPath },
                    ]}
                    href={href}
                  >
                    {text}
                  </a>
                )}
              </li>
              {i + 1 < links.length && <li class="my-auto hidden h-4 border-l border-gray-500 lg:inline-block" />}
            </>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'fixed bottom-0 left-0 hidden w-full items-center justify-end p-3 lg:static lg:mb-0 lg:flex lg:w-auto lg:self-center lg:p-0 rtl:left-auto rtl:right-0',
      ]}
    >
      <div class="flex w-full items-center justify-between lg:w-auto">
        <div class="flex">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 lg:w-5 lg:h-5 lg:inline-block" />}
        </div>
        {
          actions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              {actions.map((btnProps) => (
                <Button
                  {...btnProps}
                  class="px-5.5 ml-2 w-auto py-2.5 text-sm font-semibold text-white shadow-none lg:px-6"
                />
              ))}
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>
