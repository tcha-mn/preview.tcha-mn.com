---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { CallToAction } from '~/types';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  actions?: string | CallToAction[];
  image?: string | any; // TODO: find HTMLElementProps
  animate?: boolean;
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
  animate = false,
} = Astro.props;
---

<section class="not-prose relative md:-mt-[76px]" {...id ? { id } : {}}>
  <div class="pointer-events-none absolute inset-0" aria-hidden="true"></div>
  <div class="relative mx-auto max-w-7xl px-4 sm:px-6">
    <div class="pointer-events-none pt-0 md:pt-[76px]"></div>
    <div class="py-12 md:py-20">
      <div class="mx-auto max-w-5xl text-center">
        {
          tagline && (
            <p class="text-base font-bold uppercase tracking-wide text-secondary dark:text-accent" set:html={tagline} />
          )
        }
        {
          title && (
            <h1
              class="leading-tighter mb-4 font-heading text-5xl font-bold tracking-tighter dark:text-gray-200 md:text-6xl"
              set:html={title}
            />
          )
        }
        <div class="mx-auto max-w-3xl">
          {
            subtitle && (
              <p
                class={
                  (animate ? 'taos:scale-[0.6] taos:opacity-0 delay-[300ms] duration-[2000ms] ' : '') +
                  'mb-6 text-xl text-muted dark:text-slate-300'
                }
                data-taos-offset="300"
                set:html={subtitle}
              />
            )
          }
          {
            actions && (
              <div
                class={
                  (animate ? 'taos:scale-[0.6] taos:opacity-0 delay-[600ms] duration-[2000ms] ' : '') +
                  'm-auto flex max-w-xs flex-col flex-nowrap gap-4 sm:max-w-md sm:flex-row sm:justify-center '
                }
                data-taos-offset="300"
              >
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
        </div>
        {
          content && (
            <div
              class={animate ? 'taos:scale-[0.6] taos:opacity-0 delay-[900ms] duration-[2000ms]' : ''}
              data-taos-offset="300"
            >
              <Fragment set:html={content} />
            </div>
          )
        }
      </div>
      {
        image && image.src && (
          <div
            class={
              (animate ? 'taos:scale-[0.8] taos:opacity-0 delay-[900ms] duration-[2000ms] ' : '') +
              'relative m-auto max-w-5xl pt-10 md:pt-16'
            }
            data-taos-offset="300"
          >
            {typeof image === 'string' ? (
              <Fragment set:html={image} />
            ) : (
              <Image
                class="mx-auto w-full rounded-md"
                widths={[400, 768, 1024, 2040]}
                sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                loading="eager"
                width={1024}
                height={600}
                {...image}
              />
            )}
          </div>
        )
      }
    </div>
  </div>
</section>
