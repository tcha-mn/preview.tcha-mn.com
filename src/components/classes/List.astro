---
import type { Class } from '@schema/Class';
import { sanityClient } from 'sanity:client';
import type { ClassType } from '@schema/ClassType';
import type { Semester } from '@schema/Semester';

import SemesterWithClasses from './SemesterWithClasses.astro';

export interface Props {
  classType?: ClassType;
  debug?: boolean;
}

const { classType = '', debug = false } = Astro.props;

const classFilter = classType ? `&& class_type == "${classType}"` : '';
const QUERY = `*[_type == "semester" && registration_open < now() && dates.end > now()] | order(registration_open) {
  "semester": { name, dates, registration_open, early_registration_end },
  "classes": *[_type == "class" ${classFilter} && references(^._id)] | order(age_minimum) {
    _id,
    _createdAt,
    title,
    description,
    price,
    "image": preview_image.asset->url,
    "alt": preview_image.alt,
    "instructors": instructors[]->{name, "headshot": headshot.asset->url},
    "classTimes": class_times,
    "ages": {"min": age_minimum, "max": age_maximum},
  }
}`;
const semesters = await sanityClient.fetch<{ semester: Semester; classes: Class[] }[]>(QUERY);
if (debug) {
  console.log(semesters[0].semester);
}
---

{semesters.map(({ semester, classes }) => <SemesterWithClasses semester={semester} classes={classes} />)}
