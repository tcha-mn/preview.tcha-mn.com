---
import { Avatar, Button, Card } from 'flowbite-react';
import listify from 'listify';
import { DateTime } from 'luxon';

import type { Class } from '~/queries/SemesterWithClasses';
import { SanityPicture, urlFor } from '~/queries/sanity';
import { Icon } from 'astro-icon/components';
import { toHTML } from '@portabletext/to-html';

export interface Props {
  classItem: Class;
}

const { classItem } = Astro.props;
const classStart = classItem.dates && DateTime.fromISO(classItem.dates.start);
const classEnd = classItem.dates && DateTime.fromISO(classItem.dates.end);
---

<article class="max-w-md mx-auto md:max-w-none">
  <Card className="max-w-sm" imgAlt={classItem.title} imgSrc={urlFor(classItem.preview_image).url()}>
    <div class="p-5">
      <a href="#">
        <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
          {classItem.title}
        </h5>
      </a>
      <span>
        {
          classItem.instructors != null &&
            classItem.instructors.map((instructor) => (
              <div class="flex items-center gap-4">
                <Avatar img={urlFor(instructor.headshot).size(150, 150).url()} size="lg" rounded>
                  <div>{instructor.name}</div>
                  <div class="text-sm text-gray-500 dark:text-gray-400">{listify(instructor.class_types)}</div>
                </Avatar>
              </div>
            ))
        }
      </span>
      <div class="mt-2 mb-1">
        <span class="text-sm">
          <Icon title="Class Times" name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime=`${classItem.classTimes.start}/${classItem.classTimes.end}` class="inline-block"
            >{classItem.classTimes.start} - {classItem.classTimes.end}</time
          >
        </span>
      </div>
      {
        classItem.dates && (
          <div class="mt-2 mb-1">
            <span class="text-sm">
              <Icon
                title="Schedule"
                name="tabler:calendar"
                class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400"
              />
              Weekly on {classItem.dates.day_of_week}s, {classStart?.toLocaleString(DateTime.DATE_MED)} -
              {classEnd?.toLocaleString(DateTime.DATE_MED)}
            </span>
          </div>
        )
      }
      <div class="mt-2 mb-1">
        <span class="text-sm" title={'Ages ' + classItem.ages.min + '-' + classItem.ages.max}>
          <Icon title="Grades" name="tabler:school" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
          {classItem.grades.min} - {classItem.grades.max}
        </span>
      </div>
      <div class="mt-2 mb-1">
        <span class="text-sm">
          <Icon
            title="Tuition Fee"
            name="tabler:currency-dollar"
            class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400"
          />
          {classItem.price}
        </span>
      </div>
      {
        classItem.dates?.start && (
          <button class="py-2.5 px-5 me-2 mb-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">
            Register
          </button>
        )
      }
      <button
        data-drawer-target={'class-' + classItem._id}
        data-drawer-show={'class-' + classItem._id}
        data-drawer-placement="right"
        aria-controls={'class-' + classItem._id}
        class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
      >
        Read more <Icon name="tabler:arrow-right" />
      </button>
    </div>
  </Card>

  <div
    id={'class-' + classItem._id}
    class="fixed top-0 right-0 z-40 h-screen p-4 overflow-y-auto transition-transform translate-x-full bg-white w-96 dark:bg-gray-800"
    tabindex="-1"
    aria-labelledby="drawer-right-label"
  >
    <h3
      id={'class-' + classItem._id + '-label'}
      class="inline-flex items-center mb-4 text-3xl font-semibold dark:text-white"
    >
      {classItem.title}
    </h3>
    <button
      type="button"
      data-drawer-hide={'class-' + classItem._id}
      aria-controls={'class-' + classItem._id}
      class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 absolute top-2.5 end-2.5 inline-flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white"
    >
      <Icon name="tabler:x" />
      <span class="sr-only">Close drawer</span>
    </button>
    <SanityPicture
      src={classItem.preview_image}
      sizes="(max-width: 600px) 80px"
      img={{ alt: classItem.title, class: 'h-auto max-w-full' }}
    />
    <div class="flex flex-col gap-2 mb-3">{classItem.description}</div>
    <h4
      id={'class-' + classItem._id + '-instructor-heading'}
      class="inline-flex items-center mb-4 text-2xl font-semibold dark:text-white"
    >
      Instructor{classItem.instructors.length !== 1 ? 's' : ''}
    </h4>
    {
      classItem.instructors != null &&
        classItem.instructors.map((instructor) => (
          <>
            <SanityPicture
              src={instructor.headshot}
              sizes="(max-width: 600px) 80px"
              img={{ alt: instructor.name, class: 'h-auto max-w-full' }}
            />
            <figcaption class="mt-2 text-xl text-center text-gray-500 dark:text-gray-400">{instructor.name}</figcaption>

            <div
              class="flex flex-col gap-2 mt-2"
              set:html={instructor.class_type_bio ? toHTML(instructor.class_type_bio) : instructor.bio}
            />
          </>
        ))
    }
  </div>
</article>
