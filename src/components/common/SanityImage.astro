---
import { SanityImage as NpmSanityImage, type WrapperProps } from 'sanity-image';
import { SANITY } from '../../utils/config';
import { StandardImageAsset } from '../../queries/sanity';

export interface Props extends Omit<WrapperProps<'img'>, 'id' | 'preview'> {
  image: StandardImageAsset;
  preview?: boolean;
}

const { image, preview = true, ...props } = Astro.props;
if (!image) throw new Error(JSON.stringify(Astro.params));
---

<NpmSanityImage
  alt={image.alt}
  {...props}
  id={image.asset._id}
  projectId={SANITY.projectId}
  dataset={SANITY.dataset}
  mode="cover"
  hotspot={image.hotspot}
  crop={image.crop}
  preview={preview ? image.asset.metadata.lqip : undefined}
/>

<script>
  function swapImagePreview(img: Element) {
    img.removeAttribute('style');
    img.removeAttribute('data-loading');
    const lqip = img.previousElementSibling as HTMLImageElement;
    if (lqip.tagName === 'IMG' && lqip.hasAttribute('data-lqip')) {
      img.remove();
      lqip.replaceWith(img);
    }
  }
  document.addEventListener('astro:page-load', () => {
    document.querySelectorAll<HTMLImageElement>('img[data-loading]').forEach((img) => {
      if ((img as any).complete) {
        swapImagePreview(img);
      } else {
        img.addEventListener('load', () => swapImagePreview(img));
      }
    });
  });
</script>
